name: CI

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
  workflow_dispatch:
  repository_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest, macos-13]

    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v6

      - uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'
        with:
          toolset: "14.29"
      - name: install boost
        if: matrix.os == 'windows-latest'
        run: choco install boost-msvc-14.2

      - name: build
        run: |
          uv run make submodule
          uv run make

      # Package the adapters directory into a single .zip
      - name: Package adapters (Unix)
        if: runner.os != 'Windows'
        run: |
          cd adapters
          zip -r ../mm-test-adapters-${{ runner.os }}-${{ runner.arch }}.zip .
      - name: Package adapters (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Compress-Archive -Path adapters/* -DestinationPath mm-test-adapters-${{ runner.os }}-${{ runner.arch }}.zip

      - uses: actions/upload-artifact@v4
        with:
          name: mm-test-adapters-${{ runner.os }}-${{ runner.arch }}
          path: mm-test-adapters-${{ runner.os }}-${{ runner.arch }}.zip

  create-release:
    name: Create Release
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: "recursive"
          fetch-depth: 0

      # update submodules
      - run: git submodule update --init --recursive --remote --merge --force

      - name: Compute release tag
        id: tag
        run: |
          # Extract device interface version from header
          device_ver=$(awk '/#define DEVICE_INTERFACE_VERSION/ {print $3; exit}' src/mmCoreAndDevices/MMDevice/MMDevice.h)
          # Get the sha of the submodule
          sub_sha=$(git -C src/mmCoreAndDevices rev-parse HEAD)
          # Use first 8 chars
          short=${sub_sha:0:8}
          release_tag="${device_ver}.${short}"
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.zip
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: Release ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false
